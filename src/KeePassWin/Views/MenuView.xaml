<UserControl x:Class="KeePassWin.Views.MenuView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:KeePassWin.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:prismMvvm="using:Prism.Windows.Mvvm"
      xmlns:viewModels="using:KeePassWin.ViewModels"
      prismMvvm:ViewModelLocator.AutoWireViewModel="True"
      mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate x:Key="MenuItemTemplate" x:DataType="viewModels:MenuItemViewModel">
            <Grid>
                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Command="{x:Bind Path=RemoveCommand}" Text="Remove" Visibility="{x:Bind Path=RemoveCommand, Converter={StaticResource NullObjectVisibilityConverter}}"/>
                    </MenuFlyout>
                </Grid.ContextFlyout>
                <Button AutomationProperties.Name="{Binding DisplayName}"
                        Command="{x:Bind Path=Command}"
                        Style="{StaticResource SplitViewMenuButtonStyle}"
                        ToolTipService.ToolTip="{x:Bind Path=DisplayName}">
                    <StackPanel Orientation="Horizontal">
                        <SymbolIcon Symbol="{x:Bind Path=FontIcon}" Style="{StaticResource SplitViewMenuSymbolIconStyle}" />
                        <TextBlock AutomationProperties.AccessibilityView="Raw"
                                   Style="{StaticResource SplitViewMenuItemTextStyle}"
                                   Text="{x:Bind Path=DisplayName}" />
                    </StackPanel>
                </Button>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Background="{ThemeResource ApplicationMenuBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MenuStates">
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="menuItemsControl.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Narrow" />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <StackPanel>
            <ItemsControl x:Name="menuItemsControl"
                      Margin="0,48,0,0"
                      IsTabStop="False"
                      ItemTemplate="{StaticResource MenuItemTemplate}"
                      ItemsSource="{x:Bind Path=ConcreteDataContext.Commands}" />

            <ItemsControl x:Name="databasesControl"
                      IsTabStop="False"
                      ItemTemplate="{StaticResource MenuItemTemplate}"
                      ItemsSource="{x:Bind Path=ConcreteDataContext.Databases}" />
        </StackPanel>
    </Grid>
</UserControl>
